name: Security

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1' # Weekly on Monday at 2 AM

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --audit --prefer-offline
      
    - name: Run npm audit
      run: |
        npm audit --audit-level=high
        npm audit --json > audit-results.json || true
        
    - name: Upload audit results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: audit-results
        path: audit-results.json
        retention-days: 30

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: critical
        allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC

  secrets-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Run secret scan
      run: |
        # Check for common secret patterns
        echo "Scanning for potential secrets..."
        
        # Look for common secret patterns (basic check)
        if grep -r -i "api[_-]key\|secret\|password\|token" --include="*.js" --include="*.ts" --include="*.json" . | grep -v node_modules | grep -v ".git" | head -5; then
          echo "⚠️ Potential secrets found in code. Please review."
          echo "Note: This is a basic scan. Actual secrets should never be committed."
        else
          echo "✅ No obvious secret patterns found."
        fi

  docker-security:
    name: Docker Security Scan  
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Build Docker images for scanning
      run: |
        docker-compose build api
        docker-compose build dashboard
        
    - name: Run Trivy security scan on API
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'flowtie-api:latest'
        format: 'sarif'
        output: 'api-security-results.sarif'
      continue-on-error: true
        
    - name: Run Trivy security scan on Dashboard  
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'flowtie-dashboard:latest'
        format: 'sarif'
        output: 'dashboard-security-results.sarif'
      continue-on-error: true
        
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-scan-results
        path: '*.sarif'
        retention-days: 30